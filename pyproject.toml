[project]
name = "showcase-project"
license = {file = "LICENSE"}
readme = "README.md"
authors = [
    { name = "Drew Oldag", email = "awoldag@uw.edu" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
]
dynamic = ["version"]
requires-python = ">=3.9"
dependencies = [
    "ipykernel", # Support for Jupyter notebooks
]

[project.urls]
"Source Code" = "https://github.com/lincc-frameworks/showcase-project"

# On a mac, install optional dependencies with `pip install '.[dev]'` (include the single quotes)
[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov", # Used to report total code coverage
    "pre-commit", # Used to run checks before finalizing a git commit
    "sphinx", # Used to automatically generate documentation
    "sphinx-rtd-theme", # Used to render documentation
    "sphinx-autoapi", # Used to automatically generate api documentation
    "ruff", # Used for static linting of files
    "mypy", # Used for static type checking of files
    # if you add dependencies here while experimenting in a notebook and you
    # want that notebook to render in your documentation, please add the
    # dependencies to ./docs/requirements.txt as well.
    "nbconvert", # Needed for pre-commit check to clear output from Python notebooks
    "nbsphinx", # Used to integrate Python notebooks into Sphinx documentation
    "ipython", # Also used in building notebooks into Sphinx
    "asv==0.6.2", # Used to compute performance benchmarks
]

[build-system]
requires = [
    "setuptools>=62", # Used to build and package the Python project
    "setuptools_scm>=6.2", # Gets release version from git. Makes it available programmatically
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/new_science/_version.py"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.black]
line-length = 110
target-version = ["py39"]

[tool.isort]
profile = "black"
line_length = 110

[tool.ruff]
line-length = 110
target-version = "py39"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # pep8-naming
    "N",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # docstrings
    "D101",
    "D102",
    "D103",
    "D106",
    "D206",
    "D207",
    "D208",
    "D300",
    "D417",
    "D419",

]

ignore = [
    "UP006", # Allow non standard library generics in type hints
    "UP007", # Allow Union in type hints
    "SIM114", # Allow if with same arms
    "B028", # Allow default warning level
    "SIM117", # Allow nested with
    "UP015", # Allow redundant open parameters
    "UP028", # Allow yield in for loop
]
[tool.setuptools.package-data]
new_science = ["py.typed"]

[tool.coverage.run]
omit=["src/new_science/_version.py"]
